/* Classwork #3
Carl Erdman
11/1/2017 


1. Simulate a binary search with key = 15 on the array {1 ,3, 7, 9, 14, 14, 15, 19, 27, 37} 
Show the values of high mid and low at each recursive call. 

1st, low = 0 high = 9 mid = 4 midval < 15 
2nd  low = 5 high = 9 mid = 7 midval > 15
3rd  low = 5 high = 6 mid = 5 midval < 15
4th  low = 6 high = 6 mid = 6 midval = 15


return the value 6.




*/

#include <iostream> 

using namespace std;

int search(int array[], int low, int high, int key);

int main() // contains all main function calls
{ 

int array[] = {99, 52, 40, 32, 29, 28, 27, 20, 5}; // populate the array with values
int index = search(array, 0, 8, 40); // binary search call
cout << "Index value is: " << index << " (value of -1 means key was not found in array)"; // print out index


return 0;
}


int search(int array[], int low, int high, int key) // accepts array, low index, high index, and search value. 
//returns index of key or returns -1 if key was not found
{

	if(low <= high)
	{
		int mid = (low + high)/2; // search in the middle of the list
		
		if ( array[mid] == key) // if key is found return index
		{
			return mid;
		}
		else if (array[mid] > key) // if value at index is greater than key 
		{
			return	search(array, mid+1, high, key); //throw away values larger than current index value
		}
		else 
		{
			return	search(array, low, mid-1, key);
		}
	}
	else
	{
		return -1;
	}
}
